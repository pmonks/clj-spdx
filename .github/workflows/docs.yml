name: docs
on:
  push:
    branches:
      - main

jobs:
  docs:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
      - uses: DeLaGuardo/setup-clojure@10.3
        with:
          cli: latest
      - uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
            ~/.clojure
            ~/.cpcache
          key: ${{ runner.os }}-${{ hashFiles('**/deps.edn') }}

      - name: Generate docs
        run: clojure -Srepro -J-Dclojure.main.report=stderr -T:build docs

      - name: Deploy docs
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          keep_files: true    # Required so that we don't clobber the NVD report (published separately)
          publish_dir: ./target/doc





# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: docs

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
      - uses: DeLaGuardo/setup-clojure@10.3
        with:
          cli: latest
      - uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
            ~/.clojure
            ~/.cpcache
          key: ${{ runner.os }}-${{ hashFiles('**/deps.edn') }}
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3
      - name: Generate docs
        run: clojure -Srepro -J-Dclojure.main.report=stderr -T:build docs
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./target/doc

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
